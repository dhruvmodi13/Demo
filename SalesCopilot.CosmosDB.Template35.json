{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "backupStorageRedundancy": {
            "defaultValue": "Geo",
            "type": "string"
        },
        "CollabSpacesCollectionThroughput": {
            "type": "object"
        },
        "ConnectionInfoCollectionThroughput": {
            "type": "object"
        },
        "cosmosreadwritelocation": {
            "type": "string",
            "metadata": {
                "description": "Cosmos Read/Write Location"
            }
        },
        "cosmosSecondarylocation": {
            "type": "string"
        },
        "DefaultCollectionThroughput": {
            "type": "object"
        },
        "DeploymentScriptsCleanupPreference": {
            "type": "string",
            "defaultValue": "OnSuccess",
            "metadata": {
                "description": "Value when to delete the Deployment Scripts artifacts"
            }
        },
        "Ev2ScriptUrl": {
            "type": "string"
        },
        "hasCosmosBCDRRegion": {
            "type": "bool"
        },
        "NotificationCollectionThroughput": {
            "type": "object"
        },
        "scaleUnit": {
            "type": "string",
            "metadata": {
                "description": "Describes the scale unit that is to be used to uniquely identify each resource"
            }
        },
        "TenantSettingsCollectionThroughput": {
            "type": "object",
            "defaultValue": {
                "Max": 4000
            }
        },
        "hpaSupportAvailableVnet": {
            "type": "bool",
            "metadata": {
                "description": "Specify if Hyper Availability support is available in VNet for this Region"
            }
        },
        "preserveOldIp": {
            "type": "bool",
            "metadata": {
                "description": "Specify if old ip should be preserved (only applicable when hpaSupportAvailableVnet is true)"
            }
        },
        "hpaSupportAvailableCosmosWriteRegion": {
            "type": "bool",
            "metadata": {
                "description": "Specify if Hyper Availability support is available in CosmosDb for this Write region"
            }
        },
        "hpaSupportAvailableCosmosReadRegion": {
            "type": "bool",
            "metadata": {
                "description": "Specify if Hyper Availability support is available in CosmosDb for this Read region"
            }
        },
        "isDatabaseCreationEnabled": {
            "type": "bool",
            "metadata": {
                "description": "Specify if the database creation is enabled"
            }
        },
        "vnet": {
            "defaultValue": "vnet-salesproductivity",
            "type": "string"
        },
        "cosmos_NestedDeploymentName": {
            "type": "string",
            "defaultValue": "[concat('CosmosIpNested', uniqueString(resourceGroup().id, utcNow()))]"
        }
    },
    "variables": {
        "hpaSuffix": "[if(parameters('hpaSupportAvailableVnet'), 'hpa', '')]",
        "location": "[resourceGroup().location]",
        "spWebAppPrefix": "salesproductivityservice",
        "spWebAppName": "[concat(variables('spWebAppPrefix'),parameters('scaleUnit'))]",
        "identityResourceId": "[concat(resourceId('Microsoft.Web/sites', variables('spWebAppName')),'/providers/Microsoft.ManagedIdentity/Identities/default')]",
        "cosmosdb": "cosmosdatabase",
        "cosmosdatabasename": "[concat(variables('cosmosdb'),parameters('scaleUnit'))]",
        "tenantInfoDB": "VivaSalesTenantInfoDb",
        "publicIpAddressNameBase": "NAT-IP-SPPublicIPAddress",
        "publicIPAddressName": "[concat(variables('publicIpAddressNameBase'),parameters('scaleUnit'),variables('hpaSuffix'))]",
        "publicIPAddressNameOld": "[concat(variables('publicIpAddressNameBase'),parameters('scaleUnit'))]",
        "documentDbContributorRoleDefinitionId": "00000000-0000-0000-0000-000000000002",
        "documentDbRoleAssignmentId": "4e9ef385-ba96-48be-8398-47ff269f8c03",
        "connectionInfoDbName": "VivaSalesConnectionInfoDb",
        "connectionInfoContainerName": "ConnectionInfo",
        "licenseBackfillDbName": "VivaSalesLicenseBackfillInfoDb",
        "tenantLicensesBackfillContainerName": "TenantsLicenses",
        "userLicensesBackfillContainerName": "UsersLicenses",
        "autoInstallDbName": "AutoInstallDb",
        "autoInstallStatusContainerName": "AutoInstallStatus",
        "installDbName": "InstallDb",
        "installStatusContainerName": "InstallStatus",
        "notificationDbName": "NotificationDb",
        "notificationContainerName": "Notification",
        "salesCopilotTenantSettingsDbName": "SalesCopilotTenantSettingsDb",
        "salesCopilotTenantSettingsContainerName": "TenantSettings",
        "collabSpacesDbName": "CollabSpacesDb",
        "collabSpacesContainerName": "CollabSpaces",
        "shareToTeamsSoftLinkDbName": "ShareToTeamsSoftLinkDb",
        "shareToTeamsSoftLinkContainerName": "ShareToTeamsSoftLink",
        "identityName": "[concat('depUserIdentity', parameters('scaleUnit'))]",
        "identityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
        "migrateCosmosContainersAutoScale": "[concat('MigrateCosmosContainersAutoScale', resourceGroup().location)]",
        "migrateCosmosContainersAutoScaleScriptId": "[resourceId('Microsoft.Resources/deploymentScripts',variables('migrateCosmosContainersAutoScale'))]",
        "ipUpdateCosmosDBScriptUri": "[concat(parameters('Ev2ScriptUrl'),'CosmosDB.IPUpdate2.ps1')]",
        "deploymentScriptsUpdateTag": "[guid(uniqueString('CosmosDB.AutoScale.Migrate', parameters('scaleUnit'), subscription().subscriptionId, '1'))]",
        "deploymentScriptsUpdateTag1": "[guid(uniqueString('CosmosDB.IPUpdate', parameters('scaleUnit'), subscription().subscriptionId, '2'))]",
        "vnetName": "[concat(parameters('vnet'),parameters('scaleUnit'))]",
        "staticIpAddresses": [
            "207.68.190.32/27",
            "157.58.216.64/26",
            "13.106.78.32/27",
            "13.106.174.32/27",
            "194.69.119.64/26",
            "13.106.4.96/27",
            "167.220.249.128/26",
            "104.42.195.92"
        ],
        "staticIpAddressesString": "[join(variables('staticIpAddresses'), ',')]"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-10-15",
            "name": "[variables('cosmosdatabasename')]",
            "location": "[variables('location')]",
            "condition": "[parameters('isDatabaseCreationEnabled')]",
            "dependsOn": [
                "[parameters('cosmos_NestedDeploymentName')]"
            ],
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "ignoreMissingVNetServiceEndpoint": false
                    }
                ],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": true,
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Strong",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": "[union(createArray(createObject('locationName', parameters('cosmosreadwritelocation'), 'failoverPriority', 0, 'isZoneRedundant', parameters('hpaSupportAvailableCosmosWriteRegion'))), if(parameters('hasCosmosBCDRRegion'), createArray(createObject('locationName', parameters('cosmosSecondarylocation'), 'failoverPriority', 1, 'isZoneRedundant', parameters('hpaSupportAvailableCosmosReadRegion'))), createArray()))]",
                "cors": [],
                "copy": [
                    {
                        "name": "ipRules",
                        "count": 3,
                        "input": {
                            "ipAddressOrRange": "[format('0.0.0.{0}', copyIndex('ipRules'))]"
                        }
                    }
                ],
                "capabilities": [],
                "backupPolicy": {
                    "type": "Continuous",
                    "continuousModeProperties": {
                        "tier": "Continuous30Days"
                    }
                },
                "networkAclBypassResourceIds": []
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[parameters('cosmos_NestedDeploymentName')]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]",
            "properties":{
                "mode": "Incremental",
                "template":
                {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {
                        "ipUpdateCosmosDB": "[concat('ipUpdateCosmosDB2', resourceGroup().location)]",
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "name": "[variables('ipUpdateCosmosDB')]",
                            "location": "[resourceGroup().location]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[variables('identityId')]": {}
                                }
                            },
                            "kind": "AzurePowerShell",
                            "properties": {
                                "forceUpdateTag": "[variables('deploymentScriptsUpdateTag1')]",
                                "azPowerShellVersion": "8.3",
                                "timeout": "PT30M",
                                "arguments": "[
                                    concat(
                                      '-ResourceGroupName ', resourceGroup().name,' ',
                                      '-AccountName ',variables('cosmosdatabasename'),' ',
                                      '-NewIpRanges ', '\\\"' ,replace(variables('staticIpAddressesString'), '\"', '\\\"'),'\\\"'
                                      )
                                      ]",
                            "primaryScriptUri": "[variables('ipUpdateCosmosDBScriptUri')]",
                            "cleanupPreference": "[parameters('DeploymentScriptsCleanupPreference')]",
                            "retentionInterval": "P1D"
                            }
                        }
                    ],
                    "outputs": {
                        "updatedIpList": {
                            "type": "array",
                            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts',variables('ipUpdateCosmosDB')), '2020-10-01').outputs.ipAddress]"
                        }
                }
            }
        }
    }
]
}
